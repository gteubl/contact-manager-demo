/* tslint:disable */
/* eslint-disable */
/**
 * ContactManagerDemo.RestApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ContactDto,
  ContactsRequest,
  ContactsResponseGridDataSource,
} from '../models/index';
import {
    ContactDtoFromJSON,
    ContactDtoToJSON,
    ContactsRequestFromJSON,
    ContactsRequestToJSON,
    ContactsResponseGridDataSourceFromJSON,
    ContactsResponseGridDataSourceToJSON,
} from '../models/index';

export interface ApiContactsContactsGetRequest {
    skip?: number;
    take?: number;
    orderBy?: string;
    orderDescending?: boolean;
    magicFilter?: string;
}

export interface ApiContactsContactsPostRequest {
    contactsRequest?: ContactsRequest;
}

export interface ApiContactsCreateContactsPostRequest {
    contactDto?: ContactDto;
}

/**
 * 
 */
export class ContactsApi extends runtime.BaseAPI {

    /**
     */
    async apiContactsContactsGetRaw(requestParameters: ApiContactsContactsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContactsResponseGridDataSource>> {
        const queryParameters: any = {};

        if (requestParameters['skip'] != null) {
            queryParameters['skip'] = requestParameters['skip'];
        }

        if (requestParameters['take'] != null) {
            queryParameters['take'] = requestParameters['take'];
        }

        if (requestParameters['orderBy'] != null) {
            queryParameters['orderBy'] = requestParameters['orderBy'];
        }

        if (requestParameters['orderDescending'] != null) {
            queryParameters['orderDescending'] = requestParameters['orderDescending'];
        }

        if (requestParameters['magicFilter'] != null) {
            queryParameters['magicFilter'] = requestParameters['magicFilter'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Contacts/contacts`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ContactsResponseGridDataSourceFromJSON(jsonValue));
    }

    /**
     */
    async apiContactsContactsGet(requestParameters: ApiContactsContactsGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContactsResponseGridDataSource> {
        const response = await this.apiContactsContactsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiContactsContactsPostRaw(requestParameters: ApiContactsContactsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContactsResponseGridDataSource>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Contacts/contacts`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ContactsRequestToJSON(requestParameters['contactsRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ContactsResponseGridDataSourceFromJSON(jsonValue));
    }

    /**
     */
    async apiContactsContactsPost(requestParameters: ApiContactsContactsPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContactsResponseGridDataSource> {
        const response = await this.apiContactsContactsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiContactsCreateContactsPostRaw(requestParameters: ApiContactsCreateContactsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Contacts/create-contacts`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ContactDtoToJSON(requestParameters['contactDto']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiContactsCreateContactsPost(requestParameters: ApiContactsCreateContactsPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiContactsCreateContactsPostRaw(requestParameters, initOverrides);
    }

}
