/* tslint:disable */
/* eslint-disable */
/**
 * ContactManagerDemo.RestApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Gender } from './Gender';
import {
    GenderFromJSON,
    GenderFromJSONTyped,
    GenderToJSON,
    GenderToJSONTyped,
} from './Gender';
import type { CityDto } from './CityDto';
import {
    CityDtoFromJSON,
    CityDtoFromJSONTyped,
    CityDtoToJSON,
    CityDtoToJSONTyped,
} from './CityDto';

/**
 * 
 * @export
 * @interface ContactsResponse
 */
export interface ContactsResponse {
    /**
     * 
     * @type {string}
     * @memberof ContactsResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactsResponse
     */
    firstName: string | null;
    /**
     * 
     * @type {string}
     * @memberof ContactsResponse
     */
    lastName: string | null;
    /**
     * 
     * @type {Gender}
     * @memberof ContactsResponse
     */
    gender: Gender;
    /**
     * 
     * @type {string}
     * @memberof ContactsResponse
     */
    email: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ContactsResponse
     */
    birthDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof ContactsResponse
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {CityDto}
     * @memberof ContactsResponse
     */
    city?: CityDto;
    /**
     * 
     * @type {boolean}
     * @memberof ContactsResponse
     */
    selected?: boolean | null;
}



/**
 * Check if a given object implements the ContactsResponse interface.
 */
export function instanceOfContactsResponse(value: object): value is ContactsResponse {
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('gender' in value) || value['gender'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function ContactsResponseFromJSON(json: any): ContactsResponse {
    return ContactsResponseFromJSONTyped(json, false);
}

export function ContactsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContactsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'gender': GenderFromJSON(json['gender']),
        'email': json['email'],
        'birthDate': json['birthDate'] == null ? undefined : (new Date(json['birthDate'])),
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
        'city': json['city'] == null ? undefined : CityDtoFromJSON(json['city']),
        'selected': json['selected'] == null ? undefined : json['selected'],
    };
}

  export function ContactsResponseToJSON(json: any): ContactsResponse {
      return ContactsResponseToJSONTyped(json, false);
  }

  export function ContactsResponseToJSONTyped(value?: ContactsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'gender': GenderToJSON(value['gender']),
        'email': value['email'],
        'birthDate': value['birthDate'] == null ? undefined : ((value['birthDate'] as any).toISOString()),
        'phoneNumber': value['phoneNumber'],
        'city': CityDtoToJSON(value['city']),
        'selected': value['selected'],
    };
}

