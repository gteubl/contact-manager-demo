/* tslint:disable */
/* eslint-disable */
/**
 * ContactManagerDemo.RestApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContactsResponse } from './ContactsResponse';
import {
    ContactsResponseFromJSON,
    ContactsResponseFromJSONTyped,
    ContactsResponseToJSON,
    ContactsResponseToJSONTyped,
} from './ContactsResponse';

/**
 * 
 * @export
 * @interface ContactsResponseGridDataSource
 */
export interface ContactsResponseGridDataSource {
    /**
     * 
     * @type {number}
     * @memberof ContactsResponseGridDataSource
     */
    skip?: number;
    /**
     * 
     * @type {number}
     * @memberof ContactsResponseGridDataSource
     */
    take?: number;
    /**
     * 
     * @type {number}
     * @memberof ContactsResponseGridDataSource
     */
    count?: number;
    /**
     * 
     * @type {Array<ContactsResponse>}
     * @memberof ContactsResponseGridDataSource
     */
    data?: Array<ContactsResponse> | null;
}

/**
 * Check if a given object implements the ContactsResponseGridDataSource interface.
 */
export function instanceOfContactsResponseGridDataSource(value: object): value is ContactsResponseGridDataSource {
    return true;
}

export function ContactsResponseGridDataSourceFromJSON(json: any): ContactsResponseGridDataSource {
    return ContactsResponseGridDataSourceFromJSONTyped(json, false);
}

export function ContactsResponseGridDataSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContactsResponseGridDataSource {
    if (json == null) {
        return json;
    }
    return {
        
        'skip': json['skip'] == null ? undefined : json['skip'],
        'take': json['take'] == null ? undefined : json['take'],
        'count': json['count'] == null ? undefined : json['count'],
        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(ContactsResponseFromJSON)),
    };
}

  export function ContactsResponseGridDataSourceToJSON(json: any): ContactsResponseGridDataSource {
      return ContactsResponseGridDataSourceToJSONTyped(json, false);
  }

  export function ContactsResponseGridDataSourceToJSONTyped(value?: ContactsResponseGridDataSource | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'skip': value['skip'],
        'take': value['take'],
        'count': value['count'],
        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(ContactsResponseToJSON)),
    };
}

